/**
 * Â∏ÉÂ±ÄÁä∂ÊÄÅÁÆ°ÁêÜ Store
 * Áªü‰∏ÄÁÆ°ÁêÜÈ°µÈù¢Â∏ÉÂ±ÄÁõ∏ÂÖ≥ÁöÑÁä∂ÊÄÅÂíåËÆ°ÁÆó
 */
import { defineStore } from 'pinia'
import { ref, computed } from 'vue'
import {
  getDeviceInfo,
  calculatePageLayout,
  generateSearchContainerStyle,
  generateContentStyle,
  getResponsiveMargin
} from '@/utils/layoutUtils'

export const useLayoutStore = defineStore('layout', () => {
  // ËÆæÂ§á‰ø°ÊÅØ
  const deviceInfo = ref(null)

  // Â∏ÉÂ±Ä‰ø°ÊÅØ
  const layoutInfo = ref(null)

  // ÊòØÂê¶Â∑≤ÂàùÂßãÂåñ
  const isInitialized = ref(false)

  // ÊêúÁ¥¢Ê°ÜÈÄâÈ°π
  const searchOptions = ref({
    searchHeight: 44,
    searchMargin: 0,  // ‰øÆÊ≠£Ôºö‰ΩøÁî®searchMarginÊõø‰ª£topGap
    sideGap: '4%'
  })

  /**
   * ÂàùÂßãÂåñÂ∏ÉÂ±Ä‰ø°ÊÅØ
   * Â∫îÂú® App.vue ‰∏≠Ë∞ÉÁî®ÔºåÁ°Æ‰øùÂÖ®Â±ÄÂè™ÂàùÂßãÂåñ‰∏ÄÊ¨°
   */
  const initializeLayout = () => {
    try {
      console.log('üöÄ ÂºÄÂßãÂàùÂßãÂåñÂ∏ÉÂ±Ä‰ø°ÊÅØ...')

      // Ëé∑ÂèñËÆæÂ§á‰ø°ÊÅØ
      deviceInfo.value = getDeviceInfo()

      // ËÆ°ÁÆóÂìçÂ∫îÂºèËæπË∑ù
      searchOptions.value.sideGap = getResponsiveMargin(deviceInfo.value.screenWidth)

      // ËÆ°ÁÆóÂÆåÊï¥Â∏ÉÂ±Ä‰ø°ÊÅØ
      layoutInfo.value = calculatePageLayout(searchOptions.value)

      isInitialized.value = true

      console.log('‚úÖ Â∏ÉÂ±Ä‰ø°ÊÅØÂàùÂßãÂåñÂÆåÊàê:', {
        device: deviceInfo.value,
        layout: layoutInfo.value,
        searchOptions: searchOptions.value
      })

      return layoutInfo.value
    } catch (error) {
      console.error('‚ùå Â∏ÉÂ±Ä‰ø°ÊÅØÂàùÂßãÂåñÂ§±Ë¥•:', error)
      isInitialized.value = false
      throw error
    }
  }

  /**
   * Êõ¥Êñ∞ÊêúÁ¥¢Ê°ÜÈÖçÁΩÆ
   * @param {Object} options Êñ∞ÁöÑÈÖçÁΩÆÈÄâÈ°π
   */
  const updateSearchOptions = (options) => {
    searchOptions.value = { ...searchOptions.value, ...options }

    if (deviceInfo.value) {
      // ÈáçÊñ∞ËÆ°ÁÆóÂ∏ÉÂ±Ä
      layoutInfo.value = calculatePageLayout(searchOptions.value)
      console.log('üîÑ ÊêúÁ¥¢Ê°ÜÈÖçÁΩÆÂ∑≤Êõ¥Êñ∞ÔºåÂ∏ÉÂ±ÄÈáçÊñ∞ËÆ°ÁÆóÂÆåÊàê')
    }
  }

  // ËÆ°ÁÆóÂ±ûÊÄß - ÊêúÁ¥¢Ê°ÜÊ†∑Âºè
  const searchContainerStyle = computed(() => {
    if (!layoutInfo.value) return {}
    return generateSearchContainerStyle(layoutInfo.value)
  })

  // ËÆ°ÁÆóÂ±ûÊÄß - ÂÜÖÂÆπÂå∫ÂüüÊ†∑Âºè
  const contentStyle = computed(() => {
    if (!layoutInfo.value) return {}
    return generateContentStyle(layoutInfo.value)
  })

  // ËÆ°ÁÆóÂ±ûÊÄß - ÂØºËà™Ê†èÊÄªÈ´òÂ∫¶
  const navbarTotalHeight = computed(() => {
    if (!layoutInfo.value) return 88 // ÈªòËÆ§ÂÄº
    return layoutInfo.value.navbar.totalNavbarHeight
  })

  // ËÆ°ÁÆóÂ±ûÊÄß - Áä∂ÊÄÅÊ†èÈ´òÂ∫¶
  const statusBarHeight = computed(() => {
    if (!deviceInfo.value) return 44 // ÈªòËÆ§ÂÄº
    return deviceInfo.value.statusBarHeight
  })

  // ËÆ°ÁÆóÂ±ûÊÄß - Â±èÂπïÂÆΩÂ∫¶
  const screenWidth = computed(() => {
    if (!deviceInfo.value) return 375 // ÈªòËÆ§ÂÄº
    return deviceInfo.value.screenWidth
  })

  // ËÆ°ÁÆóÂ±ûÊÄß - ÊòØÂê¶‰∏∫Â∞èÂ±èÂπï
  const isSmallScreen = computed(() => {
    return screenWidth.value <= 375
  })

  // ËÆ°ÁÆóÂ±ûÊÄß - ÊòØÂê¶‰∏∫Â§ßÂ±èÂπï
  const isLargeScreen = computed(() => {
    return screenWidth.value >= 768
  })

  /**
   * Ëé∑ÂèñÈ°µÈù¢Â∏ÉÂ±ÄÊ†∑Âºè (Áî®‰∫éÂÖºÂÆπÊóßÁâàÊú¨)
   * @param {Object} customOptions Ëá™ÂÆö‰πâÈÖçÁΩÆ
   * @returns {Object} ÂåÖÂê´ÊêúÁ¥¢Ê°ÜÂíåÂÜÖÂÆπÊ†∑ÂºèÁöÑÂØπË±°
   */
  const getPageStyles = (customOptions = {}) => {
    if (!isInitialized.value) {
      console.warn('‚ö†Ô∏è Â∏ÉÂ±ÄÊú™ÂàùÂßãÂåñÔºå‰ΩøÁî®ÈªòËÆ§Ê†∑Âºè')
      return {
        searchContainerStyle: { top: '88px' },
        contentStyle: { marginTop: '140px' }
      }
    }

    // Â¶ÇÊûúÊúâËá™ÂÆö‰πâÈÖçÁΩÆÔºå‰∏¥Êó∂ËÆ°ÁÆó
    if (Object.keys(customOptions).length > 0) {
      const tempOptions = { ...searchOptions.value, ...customOptions }
      const tempLayout = calculatePageLayout(tempOptions)
      return {
        searchContainerStyle: generateSearchContainerStyle(tempLayout),
        contentStyle: generateContentStyle(tempLayout)
      }
    }

    return {
      searchContainerStyle: searchContainerStyle.value,
      contentStyle: contentStyle.value
    }
  }

  return {
    // Áä∂ÊÄÅ
    deviceInfo,
    layoutInfo,
    isInitialized,
    searchOptions,

    // ËÆ°ÁÆóÂ±ûÊÄß
    searchContainerStyle,
    contentStyle,
    navbarTotalHeight,
    statusBarHeight,
    screenWidth,
    isSmallScreen,
    isLargeScreen,

    // ÊñπÊ≥ï
    initializeLayout,
    updateSearchOptions,
    getPageStyles
  }
})